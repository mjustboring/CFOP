const pll = [
  {
    name: "Ua-perm",
    subset: "EPLL",
    setup: "M2' U' M U2 M' U' M2'",
    algorithm: "(M2' U) (M U2 M') (U M2')",
    image: require("./../assets/pll/Ua-perm.svg").default,
  },
  {
    name: "Ub-perm",
    subset: "EPLL",
    setup: "M2' U M U2 M' U M2'",
    algorithm: "(M2' U') (M U2 M') (U' M2')",
    image: require("./../assets/pll/Ub-perm.svg").default,
  },
  {
    name: "Z-perm",
    subset: "EPLL",
    setup: "M2 U2 M U' M2 U' M2 U' M",
    algorithm: "(M' U) (M2' U M2') (U M') (U2 M2')",
    image: require("./../assets/pll/Z-perm.svg").default,
  },
  {
    name: "H-perm",
    subset: "EPLL",
    setup: "M2' U' M2' U2' M2' U' M2'",
    algorithm: "(M2' U M2') U2 (M2' U M2')",
    image: require("./../assets/pll/H-perm.svg").default,
  },
  {
    name: "Aa-perm",
    subset: "Adj Swap",
    setup: "x R2' D2' R U R' D2' R U' R x'",
    algorithm: "x (R' U R') D2 (R U' R') D2 R2 x'",
    image: require("./../assets/pll/Aa-perm.svg").default,
  },
  {
    name: "Ab-perm",
    subset: "Adj Swap",
    setup: "x R' U R' D2' R U' R' D2' R2' x'",
    algorithm: "x R2' D2 (R U R') D2 (R U' R) x'",
    image: require("./../assets/pll/Ab-perm.svg").default,
  },
  {
    name: "Ja-perm",
    subset: "Adj Swap",
    setup: "L' U' L2 F L' U' L' U L F' L' U L",
    algorithm: "(L' U' L F) (L' U' L U) L F' L2 U L",
    image: require("./../assets/pll/Ja-perm.svg").default,
  },
  {
    name: "Jb-perm",
    subset: "Adj Swap",
    setup: "R U R2' F' R U R U' R' F R U' R'",
    algorithm: "(R U R' F') (R U R' U') R' F R2 U' R'",
    image: require("./../assets/pll/Jb-perm.svg").default,
  },
  {
    name: "E-perm",
    subset: "Opp Swap",
    setup: "x' R U' R' D R U R' D' R U R' D R U' R' D' x",
    algorithm: "(R' U' R' D') (R U' R' D) (R U R' D') (R U R' D) R2",
    image: require("./../assets/pll/E-perm.svg").default,
  },
  {
    name: "Ra-perm",
    subset: "Adj Swap",
    setup: "R U2' R D R' U R D' R' U' R' U R U R'",
    algorithm: "(R U' R' U') (R U R D) (R' U' R D') (R' U2 R')",
    image: require("./../assets/pll/Ra-perm.svg").default,
  },
  {
    name: "Rb-perm",
    subset: "Adj Swap",
    setup: "R' U R U R' U' R' D' R U R' D R U2' R",
    algorithm: "(R' U2) (R U2) (R' F R) (U R' U' R') F' R2",
    image: require("./../assets/pll/Rb-perm.svg").default,
  },
  {
    name: "Na-perm",
    subset: "Opp Swap",
    setup: "R F U' R' U R U F' R2 F' R U R U' R' F",
    algorithm: "F' (R U R' U') (R' F R2) F U' (R' U' R U) F' R'",
    image: require("./../assets/pll/Na-perm.svg").default,
  },
  {
    name: "Nb-perm",
    subset: "Opp Swap",
    setup: "R' U R U' R' F' U' F R U R' U' R U' f R f'",
    algorithm: "r' D' F (r U' r') F' D (r2 U r' U') (r' F r F')",
    image: require("./../assets/pll/Nb-perm.svg").default,
  },
  {
    name: "T-perm",
    subset: "Adj Swap",
    setup: "F R U' R' U R U R2' F' R U R U' R'",
    algorithm: "(R U R' U') (R' F R2) (U' R' U') (R U R' F')",
    image: require("./../assets/pll/T-perm.svg").default,
  },
  {
    name: "Y-perm",
    subset: "Opp Swap",
    setup: "F R' F' R U R U' R' F R U' R' U R U R' F'",
    algorithm: "F R (U' R' U') (R U R' F') (R U R' U') (R' F R F')",
    image: require("./../assets/pll/Y-perm.svg").default,
  },
  {
    name: "F-perm",
    subset: "Adj Swap",
    setup: "R' U' R U' R' U R U R2' F' R U R U' R' F U R",
    algorithm: "(R' U' F') (R U R' U') (R' F R2) (U' R' U') (R U R') (U R)",
    image: require("./../assets/pll/F-perm.svg").default,
  },
  {
    name: "V-perm",
    subset: "Opp Swap",
    setup: "R' U R U' R' f' U' R U2 R' U' R U' R' f R",
    algorithm: "y (R U' R U) (R' D R D') (R3' U' D) (R2 U R2) D' R2",
    image: require("./../assets/pll/V-perm.svg").default,
  },
  {
    name: "Ga-perm",
    subset: "Adj Swap",
    setup: "R' U' R D' U R2' U R' U R U' R U' R2' D",
    algorithm: "R2 (U R' U R') (U' R U') R2 (U' D) (R' U R) D'",
    image: require("./../assets/pll/Ga-perm.svg").default,
  },
  {
    name: "Gb-perm",
    subset: "Adj Swap",
    setup: "R2' U R' U R' U' R U' R2' D U' R' U R D'",
    algorithm: "(R' U' R) (U D') R2 (U R' U) (R U' R U') R2 D",
    image: require("./../assets/pll/Gb-perm.svg").default,
  },
  {
    name: "Gc-perm",
    subset: "Adj Swap",
    setup: "D' R U R' U' D R2' U' R U' R' U R' U R2'",
    algorithm: "y2 R2 F2 (R U2 R U2) R' F (R U R' U') R' F R2",
    image: require("./../assets/pll/Gc-perm.svg").default,
  },
  {
    name: "Gd-perm",
    subset: "Adj Swap",
    setup: "R2' U' R U' R U R' U R2' D' U R U' R' D",
    algorithm: "(R U R') (U' D) R2 (U' R U') (R' U R' U) R2 D'",
    image: require("./../assets/pll/Gd-perm.svg").default,
  },
];

export { pll };
